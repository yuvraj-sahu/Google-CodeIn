{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\YuviRiya\\\\Documents\\\\Yuvraj Sahu\\\\Google Code-In with Git\\\\Test\\\\Google-CodeIn\\\\ReactJSGame\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\YuviRiya\\\\Documents\\\\Yuvraj Sahu\\\\Google Code-In with Git\\\\Test\\\\Google-CodeIn\\\\ReactJSGame\\\\my-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nconst xPlayerLetter = 'A';\nconst oPlayerLetter = 'B';\nconst xPlayerName = \"CodeNinja (\" + xPlayerLetter + \")\";\nconst oPlayerName = \"Bob (\" + oPlayerLetter + \")\";\n\nclass Square extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      className: \"square\",\n      onClick: this.props.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, this.props.value);\n  }\n\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      isXTurn: false\n    };\n  }\n\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      isXTurn: false\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.isXTurn ? xPlayerLetter : oPlayerLetter;\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      isXTurn: !this.state.isXTurn\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      isXTurn: step % 2 === 1\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n      return React.createElement(\"li\", {\n        key: move,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.jumpTo(move),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, desc));\n    });\n    let status;\n\n    if (winner) {\n      status = 'Champion: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.isXTurn ? xPlayerName : oPlayerName);\n    }\n\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, status), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, moves)));\n  }\n\n} // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 145\n  },\n  __self: this\n}), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6], [0, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["C:/Users/YuviRiya/Documents/Yuvraj Sahu/Google Code-In with Git/Test/Google-CodeIn/ReactJSGame/my-app/src/index.js"],"names":["React","ReactDOM","xPlayerLetter","oPlayerLetter","xPlayerName","oPlayerName","Square","Component","constructor","props","state","value","render","onClick","Board","squares","Array","fill","isXTurn","renderSquare","i","Game","history","stepNumber","handleClick","slice","current","length","calculateWinner","setState","concat","jumpTo","step","winner","moves","map","move","desc","status","document","getElementById","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nconst xPlayerLetter = 'A';\r\nconst oPlayerLetter = 'B';\r\nconst xPlayerName = \"CodeNinja (\" + xPlayerLetter + \")\";\r\nconst oPlayerName = \"Bob (\" + oPlayerLetter + \")\";\r\n\r\nclass Square extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <button className=\"square\" onClick={this.props.onClick}>\r\n          {this.props.value}\r\n        </button>\r\n    );\r\n  }\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      squares: Array(9).fill(null),\r\n      isXTurn: false\r\n    };\r\n  }\r\n\r\n  renderSquare(i) {\r\n    return <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)}/>;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nclass Game extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null)\r\n      }],\r\n      stepNumber: 0,\r\n      isXTurn: false\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber+1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.isXTurn ? xPlayerLetter : oPlayerLetter;\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n      }]),\r\n      stepNumber: history.length,\r\n      isXTurn: !this.state.isXTurn,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      isXTurn: (step % 2) === 1\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'Go to move #' + move :\r\n        'Go to game start';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Champion: ' + winner;\r\n    } else {\r\n      status = 'Next player: ' + (this.state.isXTurn ? xPlayerName : oPlayerName);\r\n    }\r\n\r\n    return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board squares={current.squares} onClick={(i) => this.handleClick(i)} />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{status}</div>\r\n            <ol>{moves}</ol>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n    [0, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}"]},"metadata":{},"sourceType":"module"}